# 총 두 개의 입력이 주어진다. 어떻게 구분? => input()을 사용하면 순서대로 들어오게 된다.
# input()은 기본적으로 문자열을 반환한다. 리스트처럼 사용 가능하니 굳이 리스트를 따로 만들지 않아도 됨. 리스트처럼 인덱싱도 가능함
# 리스트로 만들고 싶다면 seats = list(input())
n = int(input()) # len을 변수로 사용하면 안된다. 파이썬 내장 함수 이름임
seats = input()

# *와 문자 하나가 짝이 맞으면 없애기? => 아님. *가 주어지지 않는다.
# 맨 왼쪽을 기준으로 첫 번째 사람은 무조건 컵을 놓을 수 있다고 하자.
# 커플석이 문제일 듯. 커플석이 연속이라면 한 사람은 컵을 못놓는다.

# S는 하나씩 다 가져가고, LL은 두 개 이상부터 하나씩 못가져간다.
# Try1 : S + 2* LL -1 => 식이 맞지 않는다. LL 개수에다가 한 개를 더하는 방식으로 접근해야함
# Try2 : S + LL + 1 => 아님, n을 사용해야한다.
# Try3 : n + 1 - LL

count_LL = 0
# for i in seats : i를 인덱스로 사용할 수 없고 문자열이 된다. i+1가 불가능하다.
"""
for i in range(n-1) : # range(n)이라고 하면 에러 발생 가능
    # if seats == 'LL' : 한 개씩 비교 가능
    if seats[i] == 'L' and seats[i+1] == 'L' : # 그 다음도 L이어야 한다. 아니면 중복 카운팅됨
        count_LL +=1
"""
# 위와 같이 작성하면 LL이 연속으로 나왔을 때 중복 카운팅되므로 안된다.
# for은 i가 순서대로 증가만 하고 바꿀 수 없다. L이 나오면 하나를 건너뛰어야하기 때문에 while 사용

i=0
while i < n-1 :
    if seats[i] == 'L' and seats[i+1] == 'L' : # 그 다음도 L이어야 한다. 아니면 중복 카운팅됨
        count_LL +=1
        i+=2
    else:
        i+=1

print(min(n,n +1 -count_LL))